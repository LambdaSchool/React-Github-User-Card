{"ast":null,"code":"var _jsxFileName = \"/Users/danglu/Desktop/lambdaschool/react-github-usercard/src/App.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios'; // import UserCard from './components/userCard'\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.fetchUsers = () => {\n      axios.get(\"https://api.github.com/users/\".concat(this.state.user)).then(resp => {\n        this.setState({\n          connections: resp.data\n        });\n      }).catch(err => {\n        console.log('error: ', err);\n      });\n    };\n\n    this.handleChange = event => {\n      this.setStatus({\n        user: event.target.value\n      });\n    };\n\n    this.state = {\n      user: 'dangnlu18',\n      connections: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchUsers();\n  }\n\n  componentDidUpdate() {\n    this.fetchUsers();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \" GitHub User Cards \"), React.createElement(\"input\", {\n      placeholder: \"enter in user name\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onSubmit: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \" Add \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \" \", this.state.user, \" \"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/danglu/Desktop/lambdaschool/react-github-usercard/src/App.js"],"names":["React","Component","axios","App","constructor","fetchUsers","get","state","user","then","resp","setState","connections","data","catch","err","console","log","handleChange","event","setStatus","target","value","componentDidMount","componentDidUpdate","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA2B;AACzBG,EAAAA,WAAW,GAAE;AACX;;AADW,SAmBbC,UAnBa,GAmBA,MAAM;AACjBH,MAAAA,KAAK,CAACI,GAAN,wCAA0C,KAAKC,KAAL,CAAWC,IAArD,GACCC,IADD,CACMC,IAAI,IAAE;AACV,aAAKC,QAAL,CAAc;AACdC,UAAAA,WAAW,EAAEF,IAAI,CAACG;AADJ,SAAd;AAGD,OALD,EAMCC,KAND,CAMOC,GAAG,IAAG;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,GAAvB;AACD,OARD;AAUD,KA9BY;;AAAA,SAgCbG,YAhCa,GAgCGC,KAAD,IAAU;AACvB,WAAKC,SAAL,CAAe;AACbZ,QAAAA,IAAI,EAAEW,KAAK,CAACE,MAAN,CAAaC;AADN,OAAf;AAGD,KApCY;;AAEX,SAAKf,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,WADK;AAEXI,MAAAA,WAAW,EAAE;AAFF,KAAb;AAID;;AAEDW,EAAAA,iBAAiB,GAAE;AACjB,SAAKlB,UAAL;AAED;;AAEDmB,EAAAA,kBAAkB,GAAE;AAClB,SAAKnB,UAAL;AAED;;AAsBDoB,EAAAA,MAAM,GAAE;AACN,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEI;AAAO,MAAA,WAAW,EAAC,oBAAnB;AAAwC,MAAA,IAAI,EAAC,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAQ,MAAA,QAAQ,EAAE,KAAKP,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAK,KAAKX,KAAL,CAAWC,IAAhB,MAJJ,CADF;AAQD;;AAhDwB;;AAmD3B,eAAeL,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n// import UserCard from './components/userCard'\n\nclass App extends Component{\n  constructor(){\n    super()\n    this.state = {\n      user: 'dangnlu18',\n      connections: []\n    }\n  }\n\n  componentDidMount(){\n    this.fetchUsers()\n\n  }\n\n  componentDidUpdate(){\n    this.fetchUsers()\n    \n  }\n\n\n  fetchUsers = () => {\n    axios.get(`https://api.github.com/users/${this.state.user}`)\n    .then(resp=>{\n      this.setState({\n      connections: resp.data\n      })\n    })\n    .catch(err =>{\n      console.log('error: ', err)\n    })\n\n  }\n\n  handleChange = (event) =>{\n    this.setStatus({\n      user: event.target.value\n    })\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <h1> GitHub User Cards </h1>\n          <input placeholder=\"enter in user name\" type=\"text\" />\n          <button onSubmit={this.handleChange}> Add </button>\n          <p> {this.state.user} </p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}